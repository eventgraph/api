"use strict";
// @generated by protoc-gen-es v0.5.0 with parameter "target=ts"
// @generated from file domainconfig/v1/properties.proto (package domainconfig.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.PropertyDefinition = exports.ValueDefinition = exports.DataType = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
const shared_pb_js_1 = require("./shared_pb.js");
/**
 * @generated from message domainconfig.v1.DataType
 */
class DataType extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from oneof domainconfig.v1.DataType.value
         */
        this.value = { case: undefined };
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new DataType().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new DataType().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new DataType().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(DataType, a, b);
    }
}
exports.DataType = DataType;
DataType.runtime = protobuf_1.proto3;
DataType.typeName = "domainconfig.v1.DataType";
DataType.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "no_value", kind: "scalar", T: 8 /* ScalarType.BOOL */, oneof: "value" },
    { no: 2, name: "i64", kind: "scalar", T: 3 /* ScalarType.INT64 */, oneof: "value" },
    { no: 3, name: "f64", kind: "scalar", T: 1 /* ScalarType.DOUBLE */, oneof: "value" },
    { no: 4, name: "text", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "value" },
    { no: 5, name: "binary", kind: "scalar", T: 12 /* ScalarType.BYTES */, oneof: "value" },
]);
/**
 * @generated from message domainconfig.v1.ValueDefinition
 */
class ValueDefinition extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ValueDefinition().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ValueDefinition().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ValueDefinition().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ValueDefinition, a, b);
    }
}
exports.ValueDefinition = ValueDefinition;
ValueDefinition.runtime = protobuf_1.proto3;
ValueDefinition.typeName = "domainconfig.v1.ValueDefinition";
ValueDefinition.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "metadata", kind: "message", T: shared_pb_js_1.Metadata },
    { no: 2, name: "data_type", kind: "message", T: DataType },
]);
/**
 * @generated from message domainconfig.v1.PropertyDefinition
 */
class PropertyDefinition extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Version version = 2;
         *
         * @generated from field: repeated domainconfig.v1.ValueDefinition values = 3;
         */
        this.values = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new PropertyDefinition().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new PropertyDefinition().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new PropertyDefinition().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(PropertyDefinition, a, b);
    }
}
exports.PropertyDefinition = PropertyDefinition;
PropertyDefinition.runtime = protobuf_1.proto3;
PropertyDefinition.typeName = "domainconfig.v1.PropertyDefinition";
PropertyDefinition.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "metadata", kind: "message", T: shared_pb_js_1.Metadata },
    { no: 3, name: "values", kind: "message", T: ValueDefinition, repeated: true },
]);
