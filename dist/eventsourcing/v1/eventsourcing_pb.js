"use strict";
// @generated by protoc-gen-es v1.0.0 with parameter "target=ts"
// @generated from file eventsourcing/v1/eventsourcing.proto (package eventsourcing.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventsResponse_Event = exports.EventsResponse = exports.EventsRequest = exports.AppendResponse = exports.AppendRequest = exports.ComponentsTransaction_Patch = exports.ComponentsTransaction_PairPatch = exports.ComponentsTransaction_PairLastEvent = exports.ComponentsTransaction_ColumnIndex = exports.ComponentsTransaction = exports.EntityPair = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
/**
 * @generated from message eventsourcing.v1.EntityPair
 */
class EntityPair extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: int64 from_entity = 1;
         */
        this.fromEntity = protobuf_1.protoInt64.zero;
        /**
         * @generated from field: int64 to_entity = 2;
         */
        this.toEntity = protobuf_1.protoInt64.zero;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new EntityPair().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new EntityPair().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new EntityPair().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(EntityPair, a, b);
    }
}
exports.EntityPair = EntityPair;
EntityPair.runtime = protobuf_1.proto3;
EntityPair.typeName = "eventsourcing.v1.EntityPair";
EntityPair.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "from_entity", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "to_entity", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
]);
/**
 * @generated from message eventsourcing.v1.ComponentsTransaction
 */
class ComponentsTransaction extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: repeated int64 i64s = 1;
         */
        this.i64s = [];
        /**
         * @generated from field: repeated double f64s = 2;
         */
        this.f64s = [];
        /**
         * @generated from field: repeated string texts = 3;
         */
        this.texts = [];
        /**
         * @generated from field: repeated bytes binaries = 4;
         */
        this.binaries = [];
        /**
         * @generated from field: map<int64, eventsourcing.v1.ComponentsTransaction.Patch> patches = 5;
         */
        this.patches = {};
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ComponentsTransaction().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ComponentsTransaction().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ComponentsTransaction().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ComponentsTransaction, a, b);
    }
}
exports.ComponentsTransaction = ComponentsTransaction;
ComponentsTransaction.runtime = protobuf_1.proto3;
ComponentsTransaction.typeName = "eventsourcing.v1.ComponentsTransaction";
ComponentsTransaction.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "i64s", kind: "scalar", T: 3 /* ScalarType.INT64 */, repeated: true },
    { no: 2, name: "f64s", kind: "scalar", T: 1 /* ScalarType.DOUBLE */, repeated: true },
    { no: 3, name: "texts", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 4, name: "binaries", kind: "scalar", T: 12 /* ScalarType.BYTES */, repeated: true },
    { no: 5, name: "patches", kind: "map", K: 3 /* ScalarType.INT64 */, V: { kind: "message", T: ComponentsTransaction_Patch } },
]);
/**
 * @generated from message eventsourcing.v1.ComponentsTransaction.ColumnIndex
 */
class ComponentsTransaction_ColumnIndex extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: uint32 table_index = 1;
         */
        this.tableIndex = 0;
        /**
         * @generated from field: uint32 patch_field_index = 2;
         */
        this.patchFieldIndex = 0;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ComponentsTransaction_ColumnIndex().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ComponentsTransaction_ColumnIndex().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ComponentsTransaction_ColumnIndex().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ComponentsTransaction_ColumnIndex, a, b);
    }
}
exports.ComponentsTransaction_ColumnIndex = ComponentsTransaction_ColumnIndex;
ComponentsTransaction_ColumnIndex.runtime = protobuf_1.proto3;
ComponentsTransaction_ColumnIndex.typeName = "eventsourcing.v1.ComponentsTransaction.ColumnIndex";
ComponentsTransaction_ColumnIndex.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "table_index", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "patch_field_index", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
]);
/**
 * @generated from message eventsourcing.v1.ComponentsTransaction.PairLastEvent
 */
class ComponentsTransaction_PairLastEvent extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: int64 last_event_ledger_id = 2;
         */
        this.lastEventLedgerId = protobuf_1.protoInt64.zero;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ComponentsTransaction_PairLastEvent().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ComponentsTransaction_PairLastEvent().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ComponentsTransaction_PairLastEvent().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ComponentsTransaction_PairLastEvent, a, b);
    }
}
exports.ComponentsTransaction_PairLastEvent = ComponentsTransaction_PairLastEvent;
ComponentsTransaction_PairLastEvent.runtime = protobuf_1.proto3;
ComponentsTransaction_PairLastEvent.typeName = "eventsourcing.v1.ComponentsTransaction.PairLastEvent";
ComponentsTransaction_PairLastEvent.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "pair", kind: "message", T: EntityPair },
    { no: 2, name: "last_event_ledger_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
]);
/**
 * @generated from message eventsourcing.v1.ComponentsTransaction.PairPatch
 */
class ComponentsTransaction_PairPatch extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: repeated eventsourcing.v1.ComponentsTransaction.ColumnIndex column_indices = 2;
         */
        this.columnIndices = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ComponentsTransaction_PairPatch().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ComponentsTransaction_PairPatch().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ComponentsTransaction_PairPatch().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ComponentsTransaction_PairPatch, a, b);
    }
}
exports.ComponentsTransaction_PairPatch = ComponentsTransaction_PairPatch;
ComponentsTransaction_PairPatch.runtime = protobuf_1.proto3;
ComponentsTransaction_PairPatch.typeName = "eventsourcing.v1.ComponentsTransaction.PairPatch";
ComponentsTransaction_PairPatch.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "pair_last_event", kind: "message", T: ComponentsTransaction_PairLastEvent },
    { no: 2, name: "column_indices", kind: "message", T: ComponentsTransaction_ColumnIndex, repeated: true },
]);
/**
 * @generated from message eventsourcing.v1.ComponentsTransaction.Patch
 */
class ComponentsTransaction_Patch extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: repeated eventsourcing.v1.EntityPair added_pairs = 1;
         */
        this.addedPairs = [];
        /**
         * @generated from field: repeated eventsourcing.v1.ComponentsTransaction.PairLastEvent removed_pairs = 2;
         */
        this.removedPairs = [];
        /**
         * @generated from field: repeated eventsourcing.v1.ComponentsTransaction.PairPatch updated_pair_patches = 3;
         */
        this.updatedPairPatches = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ComponentsTransaction_Patch().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ComponentsTransaction_Patch().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ComponentsTransaction_Patch().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ComponentsTransaction_Patch, a, b);
    }
}
exports.ComponentsTransaction_Patch = ComponentsTransaction_Patch;
ComponentsTransaction_Patch.runtime = protobuf_1.proto3;
ComponentsTransaction_Patch.typeName = "eventsourcing.v1.ComponentsTransaction.Patch";
ComponentsTransaction_Patch.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "added_pairs", kind: "message", T: EntityPair, repeated: true },
    { no: 2, name: "removed_pairs", kind: "message", T: ComponentsTransaction_PairLastEvent, repeated: true },
    { no: 3, name: "updated_pair_patches", kind: "message", T: ComponentsTransaction_PairPatch, repeated: true },
]);
/**
 * @generated from message eventsourcing.v1.AppendRequest
 */
class AppendRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new AppendRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AppendRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AppendRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(AppendRequest, a, b);
    }
}
exports.AppendRequest = AppendRequest;
AppendRequest.runtime = protobuf_1.proto3;
AppendRequest.typeName = "eventsourcing.v1.AppendRequest";
AppendRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "transaction", kind: "message", T: ComponentsTransaction },
]);
/**
 * @generated from message eventsourcing.v1.AppendResponse
 */
class AppendResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: int64 event_id = 1;
         */
        this.eventId = protobuf_1.protoInt64.zero;
        /**
         * @generated from field: bytes integrity = 2;
         */
        this.integrity = new Uint8Array(0);
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new AppendResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AppendResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AppendResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(AppendResponse, a, b);
    }
}
exports.AppendResponse = AppendResponse;
AppendResponse.runtime = protobuf_1.proto3;
AppendResponse.typeName = "eventsourcing.v1.AppendResponse";
AppendResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "event_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "integrity", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
]);
/**
 * @generated from message eventsourcing.v1.EventsRequest
 */
class EventsRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: int64 last_event_id = 1;
         */
        this.lastEventId = protobuf_1.protoInt64.zero;
        /**
         * @generated from field: uint32 limit = 2;
         */
        this.limit = 0;
        /**
         * @generated from field: repeated int64 effected_component_ids = 3;
         */
        this.effectedComponentIds = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new EventsRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new EventsRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new EventsRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(EventsRequest, a, b);
    }
}
exports.EventsRequest = EventsRequest;
EventsRequest.runtime = protobuf_1.proto3;
EventsRequest.typeName = "eventsourcing.v1.EventsRequest";
EventsRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "last_event_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "limit", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 3, name: "effected_component_ids", kind: "scalar", T: 3 /* ScalarType.INT64 */, repeated: true },
]);
/**
 * @generated from message eventsourcing.v1.EventsResponse
 */
class EventsResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: repeated eventsourcing.v1.EventsResponse.Event events = 1;
         */
        this.events = [];
        /**
         * @generated from field: bool has_more = 2;
         */
        this.hasMore = false;
        /**
         * @generated from field: int64 count = 3;
         */
        this.count = protobuf_1.protoInt64.zero;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new EventsResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new EventsResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new EventsResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(EventsResponse, a, b);
    }
}
exports.EventsResponse = EventsResponse;
EventsResponse.runtime = protobuf_1.proto3;
EventsResponse.typeName = "eventsourcing.v1.EventsResponse";
EventsResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "events", kind: "message", T: EventsResponse_Event, repeated: true },
    { no: 2, name: "has_more", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
]);
/**
 * @generated from message eventsourcing.v1.EventsResponse.Event
 */
class EventsResponse_Event extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: int64 id = 1;
         */
        this.id = protobuf_1.protoInt64.zero;
        /**
         * @generated from field: bytes integrity = 2;
         */
        this.integrity = new Uint8Array(0);
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new EventsResponse_Event().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new EventsResponse_Event().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new EventsResponse_Event().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(EventsResponse_Event, a, b);
    }
}
exports.EventsResponse_Event = EventsResponse_Event;
EventsResponse_Event.runtime = protobuf_1.proto3;
EventsResponse_Event.typeName = "eventsourcing.v1.EventsResponse.Event";
EventsResponse_Event.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "integrity", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 3, name: "created_at", kind: "message", T: protobuf_1.Timestamp },
    { no: 4, name: "transaction", kind: "message", T: ComponentsTransaction },
]);
