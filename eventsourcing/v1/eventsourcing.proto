syntax = "proto3";

package eventsourcing.v1;

import "domainconfig/v1/archetypes.proto";

message EntityPair {
  int64 from_entity = 1;
  int64 to_entity = 2;
}

message ComponentTransaction {
  message ColumnIndex {
    uint32 table_index = 1;
    uint32 patch_field_index = 2;
  }

  message EntityPairPatch {
    EntityPair entity_pair = 1;
    int64 integrity_hash = 2;
    repeated ColumnIndex column_indices = 3;
  }

  message Patch {
    repeated EntityPair added_pairs = 1;
    repeated EntityPair removed_pairs = 2;
    repeated EntityPairPatch updated_entity_patches = 3;
  }

  repeated int64 i64s = 1;
  repeated double f64s = 2;
  repeated string texts = 3;
  repeated bytes binaries = 4;
  map<int64, Patch> component_patches = 5;
}

service EventStoreService {
  rpc UniqueEntity(UniqueEntityRequest) returns (UniqueEntityResponse) {}
  rpc Patch(PatchRequest) returns (PatchResponse) {}
  rpc Query(QueryRequest) returns (QueryResponse) {}
}

message UniqueEntityRequest { uint32 count = 1; }
message UniqueEntityResponse { repeated int64 entities = 1; }

message PatchRequest { ComponentTransaction transaction = 1; }

message PatchResponse {
  message EntityPairIntegrityHash {
    int64 component_entity = 1;
    EntityPair entity_pair = 2;
    int64 integrity_hash = 3;
  }
  repeated EntityPairIntegrityHash updated_entity_pairs = 1;
}

message QueryRequest {
  domainconfig.v1.ComponentQuery query = 1;
  uint32 limit = 2;
}

message QueryResponse { ComponentTransaction transaction = 1; }
