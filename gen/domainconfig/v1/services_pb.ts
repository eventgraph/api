// @generated by protoc-gen-es v1.0.0 with parameter "target=ts"
// @generated from file domainconfig/v1/services.proto (package domainconfig.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Metadata } from "./shared_pb.js";
import { PropertyDefinition } from "./properties_pb.js";
import { ComponentDefinition } from "./components_pb.js";
import { ArchetypeDefinition } from "./archetypes_pb.js";
import { ProjectionDefinition } from "./projections_pb.js";

/**
 * @generated from message domainconfig.v1.ServiceDefinition
 */
export class ServiceDefinition extends Message<ServiceDefinition> {
  /**
   * @generated from field: domainconfig.v1.Metadata metadata = 1;
   */
  metadata?: Metadata;

  /**
   * @generated from field: repeated domainconfig.v1.PropertyDefinition properties = 3;
   */
  properties: PropertyDefinition[] = [];

  /**
   * @generated from field: repeated domainconfig.v1.ComponentDefinition components = 4;
   */
  components: ComponentDefinition[] = [];

  /**
   * @generated from field: repeated domainconfig.v1.ArchetypeDefinition archetypes = 5;
   */
  archetypes: ArchetypeDefinition[] = [];

  /**
   * @generated from field: repeated domainconfig.v1.ProjectionDefinition projections = 6;
   */
  projections: ProjectionDefinition[] = [];

  constructor(data?: PartialMessage<ServiceDefinition>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "domainconfig.v1.ServiceDefinition";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "metadata", kind: "message", T: Metadata },
    { no: 3, name: "properties", kind: "message", T: PropertyDefinition, repeated: true },
    { no: 4, name: "components", kind: "message", T: ComponentDefinition, repeated: true },
    { no: 5, name: "archetypes", kind: "message", T: ArchetypeDefinition, repeated: true },
    { no: 6, name: "projections", kind: "message", T: ProjectionDefinition, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ServiceDefinition {
    return new ServiceDefinition().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ServiceDefinition {
    return new ServiceDefinition().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ServiceDefinition {
    return new ServiceDefinition().fromJsonString(jsonString, options);
  }

  static equals(a: ServiceDefinition | PlainMessage<ServiceDefinition> | undefined, b: ServiceDefinition | PlainMessage<ServiceDefinition> | undefined): boolean {
    return proto3.util.equals(ServiceDefinition, a, b);
  }
}

